{"version":3,"sources":["../node_modules/peerjs/dist sync","store/reducers/room.reducer.js","store/actionTypes.js","store/reducers/peers.reducer.js","store/reducers/connections.reducer.js","store/reducers/calls.reducer.js","store/reducers/index.js","store/index.js","style/theme/MainTheme.jsx","components/RoomLobby/RoomLobby.jsx","components/Room/Room.jsx","components/Home/Home.jsx","components/RoomCreateForm/RoomCreateForm.jsx","utils.js","components/TestRoom/TestStreamManager/VideoCard/VideoCard.jsx","components/TestRoom/TestStreamManager/TestStreamManager.jsx","components/TestRoom/TestRoom.jsx","store/actions/connections.actions.js","constants.js","components/App/App.jsx","index.jsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","initialState","data","name","peers","connections","calls","error","roomReducer","room","action","type","payload","Object","nickname","peerId","connection","call","peersReducer","connectionsReducer","connectionId","newData","callsReducer","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","theme","createMuiTheme","palette","primary","main","secondary","useStyles","makeStyles","containerStyle","display","justifyContent","paddingTop","titleStyle","padding","color","fontWeight","backgroundColor","nicknameStyle","width","margin","textfieldLink","marginRight","marginLeft","nextButton","boxShadow","alignbutton","marginTop","RoomLobby","React","useState","setName","link","setLink","classes","ThemeProvider","Box","height","bgcolor","alignItems","paddingLeft","to","style","textDecoration","Container","className","flexDirection","borderRadius","Typography","variant","TextField","required","label","value","onChange","target","Button","size","list","fullList","menuIcon","Room","state","setState","toggleDrawer","event","onClick","fontSize","Drawer","open","onClose","role","onKeyDown","List","map","text","index","ListItem","button","key","ListItemIcon","ListItemText","Divider","buttonStyle","border","outline","Home","gutterBottom","formControl","select","borderColor","textfield","alignButton","myButton","paper","spacing","textAlign","copyLink","subtitle","RoomCreateForm","status","setStatus","active","setActive","handleChangeTexfield","FormControl","InputLabel","Select","labelId","MenuItem","length","console","log","navigator","clipboard","writeText","setVideoSrc","videoRef","stream","muted","current","srcObject","oncanplay","play","VideoCard","localPeer","localStream","remoteStream","setRemoteStream","useRef","handleOnStream","on","remoteMediaStream","useEffect","answer","ref","peer","connect","values","setLocalStream","localVideoRef","startLocalStream","a","mediaDevices","getUserMedia","video","audio","mediaStream","getTracks","forEach","track","stop","addConnection","dispatch","getState","removeConnection","socket","setSocket","setLocalPeer","message","roomId","password","inputState","setInputState","initConnectionListeners","parsedData","JSON","parse","textMessage","author","object","io","secure","query","entries","join","socketId","connectionWithLeavingUser","close","initSocket","metaData","metadata","customPeerId","Peer","host","port","path","config","iceServers","url","initPeer","emit","conn","connectWithPeer","remotePeerId","handleChange","maxConnections","joinedUsers","listAllPeers","onSubmit","preventDefault","send","stringify","sendMessage","aria-label","placeholder","App","CssBaseline","exact","component","TestRoom","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b3f82fe0.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 143;","import {SET_CALLS, ADD_CONNECTION, SET_CURRENT_ROOM, SET_CURRENT_ROOM_ERROR, SET_PEERS} from '../actionTypes';\r\n\r\nconst initialState = {\r\n    data: {\r\n        id: 'dummy-room-id',\r\n        name: 'Dummy Room',\r\n        peers: [\r\n            'd7f7saim3',\r\n            '32mfdnmio',\r\n        ],\r\n        connections: [\r\n            'd7f7saim3',\r\n            '32mfdnmio',\r\n        ],\r\n        calls: [\r\n            'd7f7saim3',\r\n            '32mfdnmio',\r\n        ]\r\n    },\r\n    error: null\r\n};\r\n\r\nconst roomReducer = (room = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_CURRENT_ROOM: {\r\n            return {data: action.payload.room, error: null};\r\n        }\r\n        case SET_CURRENT_ROOM_ERROR: {\r\n            return {data: room.data, error: action.payload.error};\r\n        }\r\n        case SET_PEERS: {\r\n            const peers = Object.keys(action.payload.peers);\r\n            return {data: room.data, peers, error: null};\r\n        }\r\n        case ADD_CONNECTION: {\r\n            // const connections = Object.keys(action.payload.connections);\r\n            // return {data: room.data, connections, error: null};\r\n            return room;\r\n        }\r\n        case SET_CALLS: {\r\n            const calls = Object.keys(action.payload.calls);\r\n            return {data: room.data, calls, error: null};\r\n        }\r\n        default: {\r\n            return room;\r\n        }\r\n    }\r\n};\r\n\r\nexport default roomReducer;\r\n","export const SET_CURRENT_ROOM = 'SET_CURRENT_ROOM';\r\nexport const SET_CURRENT_ROOM_ERROR = 'SET_CURRENT_ROOM_ERROR';\r\n\r\nexport const SET_PEERS = 'SET_PEERS';\r\nexport const SET_PEERS_ERROR = 'SET_PEERS_ERROR';\r\n\r\nexport const ADD_CONNECTION = 'ADD_CONNECTION';\r\nexport const REMOVE_CONNECTION = 'REMOVE_CONNECTION';\r\nexport const SET_CONNECTIONS_ERROR = 'SET_CONNECTIONS_ERROR';\r\n\r\nexport const SET_CALLS = 'SET_CALLS';\r\nexport const SET_CALLS_ERROR = 'SET_CALLS_ERROR';\r\n","import {ADD_CONNECTION, SET_CALLS, SET_PEERS, SET_PEERS_ERROR} from '../actionTypes';\r\n\r\nconst initialState = {\r\n    data: {\r\n        'd7f7saim3': {nickname: 'Andi', peerId: 'dscdsv-csdvsdv-dvewvew-btrbrb3', connection: 'efewfgrger', call: 'fewfewfwef'},\r\n        '32mfdnmio': {nickname: 'Jimmy', peerId: 'ztjzt-ckhjgvv-dvewvew-b3cddrv', connection: 'vverberberb', call: 'vewrverbe'}\r\n    },\r\n    error: null\r\n};\r\n\r\nconst peersReducer = (peers = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_PEERS: {\r\n            return {peers: action.payload.peers, error: null};\r\n        }\r\n        case SET_PEERS_ERROR: {\r\n            return {data: peers.data, error: action.payload.error};\r\n        }\r\n        case ADD_CONNECTION: {\r\n            // TODO iterate through peers and reference their connection id\r\n            return peers;\r\n        }\r\n        case SET_CALLS: {\r\n            // TODO iterate through peers and reference their call id\r\n            return peers;\r\n        }\r\n        default: {\r\n            return peers;\r\n        }\r\n    }\r\n};\r\n\r\nexport default peersReducer;\r\n\r\n","import {ADD_CONNECTION, REMOVE_CONNECTION, SET_CONNECTIONS_ERROR} from '../actionTypes';\r\n\r\nconst initialState = {\r\n    data: {},\r\n    error: null\r\n};\r\n\r\nconst connectionsReducer = (connections = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_CONNECTION: {\r\n            const connection = action.payload.connection;\r\n            return {data: {...connections.data, [connection.connectionId]: connection}, error: null};\r\n        }\r\n        case REMOVE_CONNECTION: {\r\n            const newData = {...connections.data};\r\n            const connection = action.payload.connection;\r\n\r\n            delete newData[connection.connectionId];\r\n\r\n            return {data: newData, error: null};\r\n        }\r\n        case SET_CONNECTIONS_ERROR: {\r\n            return {...connections, error: action.payload.error};\r\n        }\r\n        default: {\r\n            return connections;\r\n        }\r\n    }\r\n};\r\n\r\nexport default connectionsReducer;\r\n\r\n","import {SET_CALLS, SET_CALLS_ERROR} from '../actionTypes';\r\n\r\nconst initialState = {\r\n    data: {},\r\n    error: null\r\n};\r\n\r\nconst callsReducer = (calls = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_CALLS: {\r\n            return {calls: action.payload.calls, error: null};\r\n        }\r\n        case SET_CALLS_ERROR: {\r\n            return {data: calls.data, error: action.payload.error};\r\n        }\r\n        default: {\r\n            return calls;\r\n        }\r\n    }\r\n};\r\n\r\nexport default callsReducer;\r\n\r\n","import { combineReducers } from 'redux';\r\nimport roomReducer from './room.reducer';\r\nimport peersReducer from './peers.reducer';\r\nimport connectionsReducer from './connections.reducer';\r\nimport callsReducer from './calls.reducer';\r\n\r\nconst reducer = combineReducers({\r\n    room: roomReducer,\r\n    peers: peersReducer,\r\n    calls: callsReducer,\r\n    connections: connectionsReducer\r\n});\r\n\r\nexport default reducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#E53935'\r\n        },\r\n        secondary: {\r\n            main: '#FB8C00'\r\n        }\r\n    }\r\n})\r\n\r\nexport default theme","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport { ThemeProvider, makeStyles } from '@material-ui/core/styles';\r\nimport theme from '../../style/theme/MainTheme';\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\nconst useStyles = makeStyles ({\r\n    containerStyle: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        paddingTop: '128px'\r\n    },\r\n    titleStyle: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        padding: '16px',\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        backgroundColor: '#FB8C00',\r\n    },\r\n    nicknameStyle: {\r\n        width: '616px',\r\n        margin: '16px',\r\n    },\r\n    textfieldLink: {\r\n        width: '616px',\r\n        marginRight: '16px',\r\n        marginLeft: '16px',\r\n    },\r\n    nextButton: {\r\n        color: 'white',\r\n        boxShadow: 'none',\r\n        width: '422px',\r\n\r\n    },\r\n    alignbutton: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginTop: '24px',\r\n    }\r\n});\r\n\r\nconst RoomLobby = () => {\r\n    const [name, setName] = React.useState('');\r\n    const [link, setLink] = React.useState('');\r\n    const classes = useStyles();\r\n\r\n    const handleChangeName = (e) => {\r\n        setName(e.target.value)\r\n    };\r\n\r\n    const handleChangeLink = (e) => {\r\n        setLink(e.target.value)\r\n    };\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Box \r\n            display='flex'\r\n            height={63}\r\n            bgcolor='#E53935'\r\n            alignItems='center'\r\n            paddingLeft='36px'\r\n            >\r\n                <Link to=\"/\" style={{ textDecoration: 'none', color: 'white'}}>\r\n                        <ArrowBackIosIcon/>\r\n                </Link> \r\n            </Box>\r\n            <Container\r\n                className={classes.containerStyle}\r\n            >\r\n                <Box\r\n                display='flex'\r\n                flexDirection='column'\r\n                width={648}\r\n                height={307}\r\n                borderRadius='5px'\r\n                bgcolor='white'\r\n                >\r\n                <Typography\r\n                    variant='h4'\r\n                    className={classes.titleStyle}\r\n                >Enter the rooom\r\n                </Typography>\r\n                \r\n                <TextField\r\n                    required\r\n                    id=\"outlined-required\"\r\n                    label=\"Nickname\"\r\n                    variant=\"outlined\"\r\n                    value={name}\r\n                    className={classes.nicknameStyle}\r\n                    onChange={handleChangeName}\r\n                 />\r\n                <TextField\r\n                    required\r\n                    id=\"outlined-required\"\r\n                    label=\"Room ID\"\r\n                    variant=\"outlined\"\r\n                    value={link}\r\n                    className={classes.textfieldLink}\r\n                    onChange={handleChangeLink}\r\n                 />\r\n                 <div className={classes.alignbutton}>\r\n                    <Button\r\n                        size=\"large\"\r\n                        color=\"secondary\"\r\n                        variant=\"contained\"\r\n                        className={classes.nextButton}                     \r\n                    >\r\n                            join\r\n                    </Button>\r\n                </div>\r\n                </Box>\r\n            </Container>\r\n        </ThemeProvider>\r\n    )\r\n};\r\n\r\nexport default RoomLobby;\r\n","import React from 'react';\r\nimport { ThemeProvider, makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport theme from '../../style/theme/MainTheme';\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n  menuIcon: {\r\n      margin: '8px'\r\n  }\r\n});\r\n\r\nconst Room = () => {\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState(false);\r\n\r\n    const toggleDrawer = (event) => {    \r\n        if (event.type === 'keydown') {\r\n            return;\r\n          }\r\n\r\n        setState(!state);\r\n      };\r\n\r\n    const list = () => (\r\n        <div\r\n        className={classes.list}\r\n        role=\"presentation\"\r\n        onClick={toggleDrawer}\r\n        onKeyDown={toggleDrawer}\r\n      >\r\n        <List>\r\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n        <div>\r\n            <MenuIcon \r\n                onClick={toggleDrawer} \r\n                color='primary'\r\n                fontSize='large'\r\n                className={classes.menuIcon}\r\n                />\r\n            <Drawer \r\n                open={state}  \r\n                onClose={toggleDrawer}\r\n                >\r\n                {list()}\r\n            </Drawer>\r\n        </div>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nexport default Room;\r\n\r\n","import React from 'react';\r\nimport {ThemeProvider, makeStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport theme from '../../style/theme/MainTheme';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    titleStyle: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        marginTop: '98px'\r\n    },\r\n    buttonStyle: {\r\n        borderRadius: '50px',\r\n        width: '106px',\r\n        fontWeight: 'bold',\r\n        border: '2px solid #E53935',\r\n        '&:hover': {\r\n            color: 'white',\r\n            backgroundColor: '#E53935',\r\n        },\r\n        '&:focus': {\r\n            outline: 0,\r\n        }\r\n    }\r\n});\r\n\r\n\r\nconst Home = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            {/* Header */}\r\n            <Box\r\n                height={63}\r\n                bgcolor='#E53935'\r\n            > </Box>\r\n\r\n            {/* Body */}\r\n            <Box\r\n                height={640}\r\n                display='flex'\r\n            >\r\n                {/* left box */}\r\n                <Box\r\n                    display='flex'\r\n                    flexDirection='column'\r\n                    width='50%'\r\n                    height='100%'\r\n                    bgcolor='#FDD835'\r\n                    alignItems='center'\r\n                >\r\n                    <Typography\r\n                        variant='h3'\r\n                        className={classes.titleStyle}\r\n                        gutterBottom\r\n                    > Create a new room\r\n                    </Typography>\r\n                    <Link to=\"/create-room\" style={{textDecoration: 'none'}}>\r\n                        <Button\r\n                            size=\"large\"\r\n                            color='primary'\r\n                            className={classes.buttonStyle}\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </Link>\r\n                </Box>\r\n\r\n                {/* right box */}\r\n                <Box\r\n                    display='flex'\r\n                    flexDirection='column'\r\n                    width='50%'\r\n                    height='100%'\r\n                    bgcolor='#FB8C00'\r\n                    alignItems='center'\r\n                >\r\n                    <Typography\r\n                        variant=\"h3\"\r\n                        className={classes.titleStyle}\r\n                        gutterBottom\r\n                    > Join a room\r\n                    </Typography>\r\n                    <Button\r\n                        size=\"large\"\r\n                        color='primary'\r\n                        className={classes.buttonStyle}\r\n                    >Join\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n            {/*Temporary for debugging purposes*/}\r\n            <Link to={'/test-room'}>Debug Testroom</Link>\r\n        </ThemeProvider>\r\n    )\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport { ThemeProvider, makeStyles } from '@material-ui/core/styles';\r\nimport theme from '../../style/theme/MainTheme';\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    containerStyle: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        paddingTop: '128px'\r\n    },\r\n    titleStyle: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        padding: '16px',\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        backgroundColor: '#FB8C00',\r\n    },\r\n    formControl: {\r\n        width: '20%',\r\n        margin: '16px'\r\n    },\r\n    select: {\r\n        borderColor: '#FB8C00',\r\n        '&:before': {\r\n            borderColor: '#FB8C00',\r\n        },\r\n        '&:after': {\r\n            borderColor: '#f57c00',\r\n        }\r\n    },\r\n    textfield: {\r\n        width: '616px',\r\n        marginLeft: '16px',\r\n    },\r\n    textfieldLink: {\r\n        width: '506px',\r\n        marginRight: '16px',\r\n        marginLeft: '16px',\r\n    },\r\n    alignButton: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        margin: '16px'\r\n    },\r\n    myButton: {\r\n        color: 'white',\r\n        boxShadow: 'none'\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n      },\r\n    copyLink: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        marginTop: '16px'\r\n    },\r\n    nextButton: {\r\n        color: 'white',\r\n        boxShadow: 'none',\r\n        margin: '32px',\r\n        width: '576px'\r\n    },\r\n    subtitle: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginTop: '16px'\r\n    }\r\n});\r\n\r\nconst RoomCreateForm = () => {\r\n    const [status, setStatus] = React.useState('');\r\n    const [name, setName] = React.useState('');\r\n    const [link, setLink] = React.useState('https://www.figma.com/file/By2kgyeP0jIK0txwX2ZF0 https://www.figma.com/file/By2kgyeP0jIK0txwX2ZF0 https://www.figma.com/file/By2kgyeP0jIK0txwX2ZF0 https://www.figma.com/file/By2kgyeP0jIK0txwX2ZF0');\r\n    const [active, setActive ] = React.useState(true);\r\n    const classes = useStyles();\r\n\r\n    const handleChange = (event) => {\r\n        setStatus(event.target.value);\r\n    };\r\n\r\n    const handleChangeTexfield = (event) => {\r\n        setName(event.target.value)\r\n    };\r\n\r\n    const createRoom = () => {\r\n        if(name.length > 0 && status.length > 0) {\r\n            setActive(false);\r\n            console.log(status, name)\r\n        } else {\r\n            console.log('error')\r\n        }\r\n    };\r\n    \r\n    const copyToClipboard = () =>{\r\n        let mylink = link;\r\n        mylink.select();\r\n        document.execCommand('copy');\r\n    };\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            {/* Header */}\r\n            <Box \r\n                display='flex'\r\n                height={63}\r\n                bgcolor='#E53935'\r\n                alignItems='center'\r\n                paddingLeft='36px'\r\n            >\r\n               <Link to=\"/\" style={{ textDecoration: 'none', color: 'white'}}>\r\n                    <ArrowBackIosIcon/>\r\n               </Link> \r\n            </Box>\r\n\r\n            {/* Body */}\r\n            <Container\r\n                className={classes.containerStyle}\r\n            >\r\n                {/* create a new room */}\r\n                {active?\r\n                <Box\r\n                    display='flex'\r\n                    flexDirection='column'\r\n                    width={648}\r\n                    height={307}\r\n                    borderRadius='5px'\r\n                    bgcolor='white'\r\n                >\r\n                    <Typography\r\n                        variant='h4'\r\n                        className={classes.titleStyle}\r\n                    >Create a new room\r\n                    </Typography>\r\n\r\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                        <InputLabel id=\"demo-simple-select-outlined-label\">Status</InputLabel>\r\n                        <Select\r\n                    \r\n                        labelId=\"demo-simple-select-outlined-label\"\r\n                        id=\"demo-simple-select-outlined\"\r\n                        value={status}\r\n                        onChange={handleChange}\r\n                        label=\"Status\"\r\n                        className={classes.select}\r\n                        >\r\n                        <MenuItem value={'Privat'}>Privat</MenuItem>\r\n                        <MenuItem value={'Public'}>Public</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    <TextField\r\n                        required\r\n                        id=\"outlined-required\"\r\n                        label=\"Room name\"\r\n                        variant=\"outlined\"\r\n                        value={name}\r\n                        onChange={handleChangeTexfield}\r\n                        className={classes.textfield}\r\n                    />\r\n                    <div className={classes.alignButton}> \r\n                            <Button\r\n                                size=\"large\"\r\n                                color=\"secondary\"\r\n                                variant=\"contained\"\r\n                                className={classes.myButton}\r\n                                onClick={createRoom}                       \r\n                            >\r\n                                create\r\n                            </Button>\r\n                    </div>\r\n                </Box>:\r\n                \r\n                // share your room\r\n                <Box\r\n                display='flex'\r\n                flexDirection='column'\r\n                width={648}\r\n                height={307}\r\n                borderRadius='5px'\r\n                bgcolor='white'\r\n                >\r\n                <Typography\r\n                    variant='h4'\r\n                    className={classes.titleStyle}\r\n                >Room was created\r\n                </Typography>\r\n                \r\n                <div className={classes.copyLink}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        value={link}\r\n                        onChange={handleChangeTexfield}\r\n                        className={classes.textfieldLink}\r\n                    />\r\n                    <Button\r\n                        size=\"large\"\r\n                        color=\"secondary\"\r\n                        variant=\"contained\"\r\n                        className={classes.myButton}\r\n                        onClick={() => {navigator.clipboard.writeText(link)}}                  \r\n                    >\r\n                        copy\r\n                    </Button>\r\n                </div> \r\n                <Typography\r\n                        variant='h6'\r\n                        className={classes.subtitle}\r\n                    > Share your link and invite someone to your room\r\n                </Typography>\r\n                \r\n                <Link to=\"/room-lobby/1\" style={{ textDecoration: 'none',}}>\r\n                 <Button\r\n                    size=\"large\"\r\n                    color=\"secondary\"\r\n                    variant=\"contained\"\r\n                    className={classes.nextButton}                     \r\n                   >\r\n                        next\r\n                </Button>\r\n                </Link>\r\n               </Box>\r\n            }\r\n            </Container>\r\n        </ThemeProvider>\r\n    )\r\n};\r\n\r\nexport default RoomCreateForm;\r\n","// The place to put all helper methods that do not necessarily belong to a specific component\r\n// Once this file gets too crowded, create an utils folder and start seperating the exported helper methods\r\n\r\n/**\r\n * Transforms a javascript object into a query string.\r\n * @param object The source object. Example: {a: 5, b: 10}\r\n * @returns {string} The resulting query string. Example 'a=5&b=10'\r\n */\r\nexport const serializeQueryString = object => {\r\n    return Object.entries(object).map(([key, value]) => `${key}=${value}`).join('&');\r\n};\r\n\r\n/**\r\n * Set the src of a html5 <video> element and start playing\r\n * @param videoRef The reference to the video element\r\n * @param stream The stream that should be played by the referenced video element\r\n * @param muted Whether or not the audio of the stream should be muted\r\n */\r\nexport const setVideoSrc = (videoRef, stream, muted= true) => {\r\n    if (videoRef.current && stream) {\r\n        videoRef.current.srcObject = stream;\r\n        videoRef.current.oncanplay = () => {\r\n            videoRef.current.play();\r\n            videoRef.current.muted = muted;\r\n        };\r\n    }\r\n};\r\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport {setVideoSrc} from \"../../../../utils\";\r\n\r\nconst VideoCard = ({localPeer, localStream, connection}) => {\r\n    const [remoteStream, setRemoteStream] = useState(null);\r\n    const videoRef = useRef(null);\r\n\r\n    const handleOnStream = (call) => {\r\n        call.on('stream', remoteMediaStream => {\r\n            console.log('ONSTREAM', remoteMediaStream);\r\n            setRemoteStream(remoteMediaStream);\r\n        });\r\n    };\r\n\r\n    const initCallListeners = () => {\r\n        localPeer.on('call', call => {\r\n            console.log('ONCALL', call);\r\n            call.answer(localStream);\r\n            handleOnStream(call);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (localPeer && localPeer.id) {\r\n            initCallListeners();\r\n        }\r\n    }, [localPeer]);\r\n\r\n    // set src of <video> to remote stream when available\r\n    useEffect(() => {\r\n        setVideoSrc(videoRef, remoteStream, false);\r\n    }, [remoteStream]);\r\n\r\n    const handleStartCall = () => {\r\n        if (localPeer) {\r\n            const call = localPeer.call(connection.peer, localStream);\r\n            handleOnStream(call);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {console.log('videoCard rerender, connection', connection)}\r\n            {remoteStream\r\n                ? <video ref={videoRef}/>\r\n                : <button onClick={handleStartCall}>CALL this connection {connection.peer}</button>\r\n            }\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VideoCard;\r\n","import React, {useCallback, useEffect, useRef, useState} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport VideoCard from \"./VideoCard/VideoCard\";\r\nimport {setVideoSrc} from \"../../../utils\";\r\n\r\nconst TestStreamManager = ({localPeer, connections}) => {\r\n    const [localStream, setLocalStream] = useState(null);\r\n    const localVideoRef = useRef(null);\r\n\r\n    const startLocalStream = async () => {\r\n        try {\r\n            let mediaStream = await navigator.mediaDevices.getUserMedia({video: true, audio: true});\r\n            setLocalStream(mediaStream);\r\n        } catch (error) {\r\n            console.error('local stream couldnt be started via \"startStream()\"', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // unmount\r\n        return () => {\r\n            // stop browser from using the users camera & microphone\r\n            if (localStream) {\r\n                localStream.getTracks().forEach((track) => track.stop());\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (localPeer && localPeer.id) {\r\n            startLocalStream();\r\n        }\r\n    }, [localPeer]);\r\n\r\n    // set src of <video> to remote stream when available\r\n    useEffect(() => {\r\n        if (localStream) {\r\n            setVideoSrc(localVideoRef, localStream, true);\r\n        }\r\n    }, [localStream]);\r\n\r\n    return (\r\n        <div>\r\n            <video ref={localVideoRef}/>\r\n            {localStream && connections && connections.map(connection => <VideoCard key={connection.connectionId} localPeer={localPeer} localStream={localStream} connection={connection}/>)}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    connections: Object.values(state.connections.data)\r\n});\r\n\r\nexport default  connect(mapStateToProps)(TestStreamManager);\r\n","import React, {useState, useEffect} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport Peer from \"peerjs\";\r\nimport io from 'socket.io-client';\r\nimport {serializeQueryString} from \"../../utils\";\r\nimport {API_BASE_URL, PORT_SIGNALING, PORT_SOCKET} from \"../../constants\";\r\nimport {addConnection, removeConnection} from \"../../store/actions/connections.actions\";\r\nimport {Link} from \"react-router-dom\";\r\nimport TestStreamManager from \"./TestStreamManager/TestStreamManager\";\r\n\r\n\r\n// const calls = [];\r\nconst TestRoom = ({connections, addConnection, removeConnection}) => {\r\n    const [socket, setSocket] = useState(null);\r\n    const [localPeer, setLocalPeer] = useState(null);\r\n    const [remoteStreams, setRemoteStreams] = useState([]);\r\n\r\n    const [inputState, setInputState] = useState({\r\n        message: '',\r\n        roomId: 'dummy-room-id',\r\n        password: 'dummy123',\r\n        nickname: ''\r\n    });\r\n\r\n    const initPeer = () => {\r\n        if (socket) {\r\n            const customPeerId = socket.id;\r\n            const peer = new Peer(customPeerId, {\r\n                host: API_BASE_URL,\r\n                port: PORT_SIGNALING,\r\n                path: '/peer/signal',\r\n                // debug: 3,\r\n                config: {iceServers: [{url: 'stun:stun.l.google.com:19302'}]}\r\n            });\r\n\r\n            console.log('peer', customPeerId, peer);\r\n            setLocalPeer(peer);\r\n        } else {\r\n            console.log('could not create new Peer because the socket.io connection is not established yet');\r\n        }\r\n    };\r\n\r\n    const initSocket = () => {\r\n        const socket = io(`https://${API_BASE_URL}:${PORT_SOCKET}`, {\r\n            // transports: ['websocket'],\r\n            secure: true,\r\n            query: serializeQueryString({\r\n                nickname: inputState.nickname || 'default nickname'\r\n            })\r\n        });\r\n\r\n        socket.on('ready', (socketId) => {\r\n            setSocket(socket);\r\n        });\r\n\r\n        // Init Listeners\r\n        socket.on('user-join', (room) => {\r\n            console.log('new user joined room, he will connect to you shortly');\r\n        });\r\n\r\n        socket.on('user-leave', (data) => {\r\n            const connectionWithLeavingUser = connections[data.peerId];\r\n            console.log('user left room', data.peerId, connectionWithLeavingUser);\r\n\r\n            if (connectionWithLeavingUser) {\r\n                connectionWithLeavingUser.close();\r\n            }\r\n        });\r\n    };\r\n\r\n    const initConnectionListeners = (connection) => {\r\n        connection.on('data', data => {\r\n            const parsedData = JSON.parse(data);\r\n\r\n            if (parsedData.textMessage) {\r\n                console.log(\r\n                    `%c MESSAGE - ${parsedData.textMessage.author}: \"${parsedData.textMessage.text}\"`,\r\n                    'background: black; color: white; padding: 1rem'\r\n                );\r\n            }\r\n        });\r\n\r\n        connection.on('close', () => removeConnection(connection));\r\n    };\r\n\r\n    useEffect(() => {\r\n        initSocket();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (localPeer) {\r\n            console.log('peer initialized: ', localPeer);\r\n\r\n            localPeer.on('open', id => {\r\n                console.log('My peer ID is: ' + localPeer.id, localPeer);\r\n            });\r\n\r\n            localPeer.on('connection', connection => {\r\n                console.log('on connection with', connection, 'metadata: ', connection.metaData, connection.metadata);\r\n                addConnection(connection);\r\n                initConnectionListeners(connection);\r\n            });\r\n\r\n            localPeer.on('disconnected', connection => {\r\n                console.log('-------DISCONNECTED', connection);\r\n                addConnection(connection);\r\n                initConnectionListeners(connection);\r\n            });\r\n        }\r\n    }, [localPeer]);\r\n\r\n    useEffect(() => {\r\n        if (socket && socket.id) {\r\n            initPeer();\r\n        }\r\n\r\n        // On unmount: notify other people that you left before actually disconnecting\r\n        return () => {\r\n            if (socket) {\r\n                socket.emit('leave', inputState.roomId); // TODO change id for real rooms.\r\n            }\r\n\r\n            if (connections) {\r\n                Object.values(connections).forEach(conn => conn.close());\r\n            }\r\n        }\r\n    }, [socket]);\r\n\r\n\r\n    const handleCreateRoom = (e) => {\r\n        socket.emit('create', {\r\n            // id: 'test-room-id',\r\n            name: 'test room name',\r\n            password: inputState.password,\r\n            maxConnections: 4\r\n        }, (data) => {\r\n            if (data) {\r\n                setInputState({...inputState, roomId: 'dummy-room-id'});\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleJoinRoom = (e) => {\r\n        const {roomId, password } = inputState;\r\n        socket.emit('join', { roomId, password, peerId: localPeer.id },\r\n            // callback: the joining user himself is responsible to establish connections with other users\r\n            (data) => {\r\n            if (data) {\r\n                console.log('joined room', data);\r\n                data.room.joinedUsers.forEach((peerId) => {\r\n                    if (peerId !== localPeer.id) {\r\n                        connectWithPeer(peerId);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleListAllPeers = (e) => {\r\n        localPeer.listAllPeers((peers) => {\r\n            console.log('peers', peers);\r\n        });\r\n    };\r\n\r\n    const sendMessage = () => {\r\n        if (localPeer) {\r\n            const message = {textMessage: {author: 'derp', text: inputState.message} };\r\n            Object.values(connections).forEach(connection => {\r\n                console.log('send message to', connection.peer);\r\n                connection.send(JSON.stringify(message));\r\n            });\r\n        }\r\n    };\r\n\r\n    const connectWithPeer = async (remotePeerId) => {\r\n        const connection = await localPeer.connect(remotePeerId, {metadata: {\r\n            nickname: 'test-metadata'\r\n            }});\r\n        addConnection(connection);\r\n        initConnectionListeners(connection);\r\n    };\r\n\r\n    //////////////////\r\n    //// HANDLERS ////\r\n    //////////////////\r\n    const handleChange = e => setInputState({...inputState, [e.target.name]: e.target.value});\r\n\r\n    const handleSendMessage = e => {\r\n        e.preventDefault();\r\n        sendMessage();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                Hello world\r\n                <button onClick={handleCreateRoom}>create room</button>\r\n                <button onClick={handleJoinRoom}>join room</button>\r\n                <button onClick={handleListAllPeers}>listAllPeers room</button>\r\n                <Link to={'/'}>HOME</Link>\r\n            </div>\r\n            <div>\r\n                <form onSubmit={handleSendMessage}>\r\n                    <fieldset>\r\n                        <legend>Send Message to Peers</legend>\r\n                        <input\r\n                            type='text'\r\n                            aria-label='chat input'\r\n                            name='message'\r\n                            value={inputState.message}\r\n                            onChange={handleChange}\r\n                            placeholder='Hello Peer...'\r\n                        />\r\n                        <button type='submit'>send</button>\r\n                    </fieldset>\r\n                </form>\r\n\r\n                <input\r\n                    type='text'\r\n                    aria-label='chat input'\r\n                    name='nickname'\r\n                    value={inputState.nickname}\r\n                    onChange={handleChange}\r\n                    placeholder='Enter your nickname'\r\n                />\r\n            </div>\r\n            <TestStreamManager localPeer={localPeer} />\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    connections: state.connections.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, {addConnection, removeConnection})(TestRoom);\r\n\r\n","import {ADD_CONNECTION, REMOVE_CONNECTION} from \"../actionTypes\";\r\n\r\nexport const addConnection = connection => (dispatch, getState) => {\r\n    if (connection.peer && connection.connectionId) {\r\n        dispatch({\r\n            type: ADD_CONNECTION,\r\n            payload: {connection}\r\n        });\r\n    }\r\n};\r\n\r\nexport const removeConnection = connection => (dispatch, getState) => {\r\n    // FIXME check if connection really gets garbage collected if there are no references.\r\n    //  I remember reading that browsers keep them around. If that is the case delete them manually in this thunk\r\n    if (connection.connectionId) {\r\n        console.log('remove connection action', connection);\r\n        dispatch({\r\n            type: REMOVE_CONNECTION,\r\n            payload: {connection}\r\n        });\r\n    }\r\n};\r\n","export const API_BASE_URL = 'derpmasters.online'; // will use a environment variable later on\r\n// export const API_BASE_URL = 'localhost'; // uncomment for local development\r\n\r\nexport const PORT_SIGNALING = '5001';\r\nexport const PORT_SOCKET = '5002';\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport RoomLobby from \"../RoomLobby/RoomLobby\";\r\nimport Room from \"../Room/Room\";\r\nimport Home from \"../Home/Home\";\r\nimport RoomCreateForm from \"../RoomCreateForm/RoomCreateForm\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TestRoom from \"../TestRoom/TestRoom\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <CssBaseline>\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path='/' component={Home} />\r\n                    <Route exact path='/create-room' component={RoomCreateForm} />\r\n                    <Route exact path='/room-lobby/:roomId' component={RoomLobby} />\r\n                    <Route path='/rooms/:roomId' component={Room} />\r\n                    <Route path='/test-room' component={TestRoom} />\r\n                </Switch>\r\n            </Router>\r\n        </CssBaseline>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React, {StrictMode} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(\r\n  <StrictMode>\r\n      <Provider store={store}>\r\n          <App />\r\n      </Provider>\r\n  </StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}